// Task Service gRPC Contract

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file task-service.proto (package suru.task.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddSubtaskRequest, AddSubtaskResponse, AssignTaskRequest, AssignTaskResponse, CreateTaskRequest, CreateTaskResponse, DeleteTaskRequest, DeleteTaskResponse, GetTaskRequest, GetTaskResponse, ListTasksRequest, ListTasksResponse, TaskEvent, UpdateTaskRequest, UpdateTaskResponse, WatchTasksRequest } from "./task-service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Task Service - Manages tasks and subtasks
 *
 * @generated from service suru.task.v1.TaskService
 */
export const TaskService = {
  typeName: "suru.task.v1.TaskService",
  methods: {
    /**
     * Create a new task
     *
     * @generated from rpc suru.task.v1.TaskService.CreateTask
     */
    createTask: {
      name: "CreateTask",
      I: CreateTaskRequest,
      O: CreateTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get task by ID
     *
     * @generated from rpc suru.task.v1.TaskService.GetTask
     */
    getTask: {
      name: "GetTask",
      I: GetTaskRequest,
      O: GetTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List tasks with filtering
     *
     * @generated from rpc suru.task.v1.TaskService.ListTasks
     */
    listTasks: {
      name: "ListTasks",
      I: ListTasksRequest,
      O: ListTasksResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update task
     *
     * @generated from rpc suru.task.v1.TaskService.UpdateTask
     */
    updateTask: {
      name: "UpdateTask",
      I: UpdateTaskRequest,
      O: UpdateTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete task
     *
     * @generated from rpc suru.task.v1.TaskService.DeleteTask
     */
    deleteTask: {
      name: "DeleteTask",
      I: DeleteTaskRequest,
      O: DeleteTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Assign task to user
     *
     * @generated from rpc suru.task.v1.TaskService.AssignTask
     */
    assignTask: {
      name: "AssignTask",
      I: AssignTaskRequest,
      O: AssignTaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add subtask
     *
     * @generated from rpc suru.task.v1.TaskService.AddSubtask
     */
    addSubtask: {
      name: "AddSubtask",
      I: AddSubtaskRequest,
      O: AddSubtaskResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Stream task updates (real-time)
     *
     * @generated from rpc suru.task.v1.TaskService.WatchTasks
     */
    watchTasks: {
      name: "WatchTasks",
      I: WatchTasksRequest,
      O: TaskEvent,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;

