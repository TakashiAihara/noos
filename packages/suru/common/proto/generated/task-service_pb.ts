// Task Service gRPC Contract

// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file task-service.proto (package suru.task.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from '@bufbuild/protobuf/codegenv2';
import { enumDesc, fileDesc, messageDesc, serviceDesc } from '@bufbuild/protobuf/codegenv2';
import type { Message } from '@bufbuild/protobuf';

/**
 * Describes the file task-service.proto.
 */
export const file_task_service: GenFile =
  /*@__PURE__*/
  fileDesc(
    'ChJ0YXNrLXNlcnZpY2UucHJvdG8SDHN1cnUudGFzay52MSKyAwoEVGFzaxIKCgJpZBgBIAEoCRINCgV0aXRsZRgCIAEoCRIYCgtkZXNjcmlwdGlvbhgDIAEoCUgAiAEBEigKBnN0YXR1cxgEIAEoDjIYLnN1cnUudGFzay52MS5UYXNrU3RhdHVzEigKCHByaW9yaXR5GAUgASgOMhYuc3VydS50YXNrLnYxLlByaW9yaXR5EhUKCGR1ZV9kYXRlGAYgASgJSAGIAQESEgoKcHJvamVjdF9pZBgHIAEoCRIYCgthc3NpZ25lZV9pZBgIIAEoCUgCiAEBEgwKBHRhZ3MYCSADKAkSGwoOcGFyZW50X3Rhc2tfaWQYCiABKAlIA4gBARIkCghzdWJ0YXNrcxgLIAMoCzISLnN1cnUudGFzay52MS5UYXNrEhIKCmNyZWF0ZWRfYnkYDCABKAkSEgoKY3JlYXRlZF9hdBgNIAEoCRISCgp1cGRhdGVkX2F0GA4gASgJEg8KB3ZlcnNpb24YDyABKAVCDgoMX2Rlc2NyaXB0aW9uQgsKCV9kdWVfZGF0ZUIOCgxfYXNzaWduZWVfaWRCEQoPX3BhcmVudF90YXNrX2lkIqgCChFDcmVhdGVUYXNrUmVxdWVzdBISCgpwcm9qZWN0X2lkGAEgASgJEg0KBXRpdGxlGAIgASgJEhgKC2Rlc2NyaXB0aW9uGAMgASgJSACIAQESLQoIcHJpb3JpdHkYBCABKA4yFi5zdXJ1LnRhc2sudjEuUHJpb3JpdHlIAYgBARIVCghkdWVfZGF0ZRgFIAEoCUgCiAEBEgwKBHRhZ3MYBiADKAkSGAoLYXNzaWduZWVfaWQYByABKAlIA4gBARIbCg5wYXJlbnRfdGFza19pZBgIIAEoCUgEiAEBQg4KDF9kZXNjcmlwdGlvbkILCglfcHJpb3JpdHlCCwoJX2R1ZV9kYXRlQg4KDF9hc3NpZ25lZV9pZEIRCg9fcGFyZW50X3Rhc2tfaWQiNgoSQ3JlYXRlVGFza1Jlc3BvbnNlEiAKBHRhc2sYASABKAsyEi5zdXJ1LnRhc2sudjEuVGFzayI2Cg5HZXRUYXNrUmVxdWVzdBIKCgJpZBgBIAEoCRIYChBpbmNsdWRlX3N1YnRhc2tzGAIgASgIIjMKD0dldFRhc2tSZXNwb25zZRIgCgR0YXNrGAEgASgLMhIuc3VydS50YXNrLnYxLlRhc2sigwIKEExpc3RUYXNrc1JlcXVlc3QSEgoKcHJvamVjdF9pZBgBIAEoCRItCgZzdGF0dXMYAiABKA4yGC5zdXJ1LnRhc2sudjEuVGFza1N0YXR1c0gAiAEBEhgKC2Fzc2lnbmVlX2lkGAMgASgJSAGIAQESDAoEdGFncxgEIAMoCRIUCgdzb3J0X2J5GAUgASgJSAKIAQESFwoKc29ydF9vcmRlchgGIAEoCUgDiAEBEgwKBHBhZ2UYByABKAUSEQoJcGFnZV9zaXplGAggASgFQgkKB19zdGF0dXNCDgoMX2Fzc2lnbmVlX2lkQgoKCF9zb3J0X2J5Qg0KC19zb3J0X29yZGVyImwKEUxpc3RUYXNrc1Jlc3BvbnNlEiEKBXRhc2tzGAEgAygLMhIuc3VydS50YXNrLnYxLlRhc2sSEwoLdG90YWxfY291bnQYAiABKAUSDAoEcGFnZRgDIAEoBRIRCglwYWdlX3NpemUYBCABKAUioAIKEVVwZGF0ZVRhc2tSZXF1ZXN0EgoKAmlkGAEgASgJEhIKBXRpdGxlGAIgASgJSACIAQESGAoLZGVzY3JpcHRpb24YAyABKAlIAYgBARItCgZzdGF0dXMYBCABKA4yGC5zdXJ1LnRhc2sudjEuVGFza1N0YXR1c0gCiAEBEi0KCHByaW9yaXR5GAUgASgOMhYuc3VydS50YXNrLnYxLlByaW9yaXR5SAOIAQESFQoIZHVlX2RhdGUYBiABKAlIBIgBARIMCgR0YWdzGAcgAygJEg8KB3ZlcnNpb24YCCABKAVCCAoGX3RpdGxlQg4KDF9kZXNjcmlwdGlvbkIJCgdfc3RhdHVzQgsKCV9wcmlvcml0eUILCglfZHVlX2RhdGUiNgoSVXBkYXRlVGFza1Jlc3BvbnNlEiAKBHRhc2sYASABKAsyEi5zdXJ1LnRhc2sudjEuVGFzayIfChFEZWxldGVUYXNrUmVxdWVzdBIKCgJpZBgBIAEoCSIlChJEZWxldGVUYXNrUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCJOChFBc3NpZ25UYXNrUmVxdWVzdBIPCgd0YXNrX2lkGAEgASgJEhgKC2Fzc2lnbmVlX2lkGAIgASgJSACIAQFCDgoMX2Fzc2lnbmVlX2lkIjYKEkFzc2lnblRhc2tSZXNwb25zZRIgCgR0YXNrGAEgASgLMhIuc3VydS50YXNrLnYxLlRhc2siZAoRQWRkU3VidGFza1JlcXVlc3QSFgoOcGFyZW50X3Rhc2tfaWQYASABKAkSDQoFdGl0bGUYAiABKAkSGAoLZGVzY3JpcHRpb24YAyABKAlIAIgBAUIOCgxfZGVzY3JpcHRpb24iOQoSQWRkU3VidGFza1Jlc3BvbnNlEiMKB3N1YnRhc2sYASABKAsyEi5zdXJ1LnRhc2sudjEuVGFzayInChFXYXRjaFRhc2tzUmVxdWVzdBISCgpwcm9qZWN0X2lkGAEgASgJIrMBCglUYXNrRXZlbnQSLwoEdHlwZRgBIAEoDjIhLnN1cnUudGFzay52MS5UYXNrRXZlbnQuRXZlbnRUeXBlEiAKBHRhc2sYAiABKAsyEi5zdXJ1LnRhc2sudjEuVGFzaxIRCgl0aW1lc3RhbXAYAyABKAkiQAoJRXZlbnRUeXBlEgsKB0NSRUFURUQQABILCgdVUERBVEVEEAESCwoHREVMRVRFRBACEgwKCEFTU0lHTkVEEAMqMQoKVGFza1N0YXR1cxIICgRUT0RPEAASDwoLSU5fUFJPR1JFU1MQARIICgRET05FEAIqKQoIUHJpb3JpdHkSBwoDTE9XEAASCgoGTUVESVVNEAESCAoESElHSBACMoIFCgtUYXNrU2VydmljZRJPCgpDcmVhdGVUYXNrEh8uc3VydS50YXNrLnYxLkNyZWF0ZVRhc2tSZXF1ZXN0GiAuc3VydS50YXNrLnYxLkNyZWF0ZVRhc2tSZXNwb25zZRJGCgdHZXRUYXNrEhwuc3VydS50YXNrLnYxLkdldFRhc2tSZXF1ZXN0Gh0uc3VydS50YXNrLnYxLkdldFRhc2tSZXNwb25zZRJMCglMaXN0VGFza3MSHi5zdXJ1LnRhc2sudjEuTGlzdFRhc2tzUmVxdWVzdBofLnN1cnUudGFzay52MS5MaXN0VGFza3NSZXNwb25zZRJPCgpVcGRhdGVUYXNrEh8uc3VydS50YXNrLnYxLlVwZGF0ZVRhc2tSZXF1ZXN0GiAuc3VydS50YXNrLnYxLlVwZGF0ZVRhc2tSZXNwb25zZRJPCgpEZWxldGVUYXNrEh8uc3VydS50YXNrLnYxLkRlbGV0ZVRhc2tSZXF1ZXN0GiAuc3VydS50YXNrLnYxLkRlbGV0ZVRhc2tSZXNwb25zZRJPCgpBc3NpZ25UYXNrEh8uc3VydS50YXNrLnYxLkFzc2lnblRhc2tSZXF1ZXN0GiAuc3VydS50YXNrLnYxLkFzc2lnblRhc2tSZXNwb25zZRJPCgpBZGRTdWJ0YXNrEh8uc3VydS50YXNrLnYxLkFkZFN1YnRhc2tSZXF1ZXN0GiAuc3VydS50YXNrLnYxLkFkZFN1YnRhc2tSZXNwb25zZRJICgpXYXRjaFRhc2tzEh8uc3VydS50YXNrLnYxLldhdGNoVGFza3NSZXF1ZXN0Ghcuc3VydS50YXNrLnYxLlRhc2tFdmVudDABYgZwcm90bzM',
  );

/**
 * Messages
 *
 * @generated from message suru.task.v1.Task
 */
export type Task = Message<'suru.task.v1.Task'> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: suru.task.v1.TaskStatus status = 4;
   */
  status: TaskStatus;

  /**
   * @generated from field: suru.task.v1.Priority priority = 5;
   */
  priority: Priority;

  /**
   * ISO 8601 date string
   *
   * @generated from field: optional string due_date = 6;
   */
  dueDate?: string;

  /**
   * @generated from field: string project_id = 7;
   */
  projectId: string;

  /**
   * @generated from field: optional string assignee_id = 8;
   */
  assigneeId?: string;

  /**
   * @generated from field: repeated string tags = 9;
   */
  tags: string[];

  /**
   * @generated from field: optional string parent_task_id = 10;
   */
  parentTaskId?: string;

  /**
   * @generated from field: repeated suru.task.v1.Task subtasks = 11;
   */
  subtasks: Task[];

  /**
   * @generated from field: string created_by = 12;
   */
  createdBy: string;

  /**
   * ISO 8601 timestamp
   *
   * @generated from field: string created_at = 13;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 14;
   */
  updatedAt: string;

  /**
   * @generated from field: int32 version = 15;
   */
  version: number;
};

/**
 * Describes the message suru.task.v1.Task.
 * Use `create(TaskSchema)` to create a new message.
 */
export const TaskSchema: GenMessage<Task> = /*@__PURE__*/ messageDesc(file_task_service, 0);

/**
 * Create Task
 *
 * @generated from message suru.task.v1.CreateTaskRequest
 */
export type CreateTaskRequest = Message<'suru.task.v1.CreateTaskRequest'> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: optional suru.task.v1.Priority priority = 4;
   */
  priority?: Priority;

  /**
   * @generated from field: optional string due_date = 5;
   */
  dueDate?: string;

  /**
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];

  /**
   * @generated from field: optional string assignee_id = 7;
   */
  assigneeId?: string;

  /**
   * @generated from field: optional string parent_task_id = 8;
   */
  parentTaskId?: string;
};

/**
 * Describes the message suru.task.v1.CreateTaskRequest.
 * Use `create(CreateTaskRequestSchema)` to create a new message.
 */
export const CreateTaskRequestSchema: GenMessage<CreateTaskRequest> =
  /*@__PURE__*/
  messageDesc(file_task_service, 1);

/**
 * @generated from message suru.task.v1.CreateTaskResponse
 */
export type CreateTaskResponse = Message<'suru.task.v1.CreateTaskResponse'> & {
  /**
   * @generated from field: suru.task.v1.Task task = 1;
   */
  task?: Task;
};

/**
 * Describes the message suru.task.v1.CreateTaskResponse.
 * Use `create(CreateTaskResponseSchema)` to create a new message.
 */
export const CreateTaskResponseSchema: GenMessage<CreateTaskResponse> =
  /*@__PURE__*/
  messageDesc(file_task_service, 2);

/**
 * Get Task
 *
 * @generated from message suru.task.v1.GetTaskRequest
 */
export type GetTaskRequest = Message<'suru.task.v1.GetTaskRequest'> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: bool include_subtasks = 2;
   */
  includeSubtasks: boolean;
};

/**
 * Describes the message suru.task.v1.GetTaskRequest.
 * Use `create(GetTaskRequestSchema)` to create a new message.
 */
export const GetTaskRequestSchema: GenMessage<GetTaskRequest> =
  /*@__PURE__*/
  messageDesc(file_task_service, 3);

/**
 * @generated from message suru.task.v1.GetTaskResponse
 */
export type GetTaskResponse = Message<'suru.task.v1.GetTaskResponse'> & {
  /**
   * @generated from field: suru.task.v1.Task task = 1;
   */
  task?: Task;
};

/**
 * Describes the message suru.task.v1.GetTaskResponse.
 * Use `create(GetTaskResponseSchema)` to create a new message.
 */
export const GetTaskResponseSchema: GenMessage<GetTaskResponse> =
  /*@__PURE__*/
  messageDesc(file_task_service, 4);

/**
 * List Tasks
 *
 * @generated from message suru.task.v1.ListTasksRequest
 */
export type ListTasksRequest = Message<'suru.task.v1.ListTasksRequest'> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * @generated from field: optional suru.task.v1.TaskStatus status = 2;
   */
  status?: TaskStatus;

  /**
   * @generated from field: optional string assignee_id = 3;
   */
  assigneeId?: string;

  /**
   * @generated from field: repeated string tags = 4;
   */
  tags: string[];

  /**
   * e.g., "due_date", "priority", "created_at"
   *
   * @generated from field: optional string sort_by = 5;
   */
  sortBy?: string;

  /**
   * "asc" or "desc"
   *
   * @generated from field: optional string sort_order = 6;
   */
  sortOrder?: string;

  /**
   * @generated from field: int32 page = 7;
   */
  page: number;

  /**
   * @generated from field: int32 page_size = 8;
   */
  pageSize: number;
};

/**
 * Describes the message suru.task.v1.ListTasksRequest.
 * Use `create(ListTasksRequestSchema)` to create a new message.
 */
export const ListTasksRequestSchema: GenMessage<ListTasksRequest> =
  /*@__PURE__*/
  messageDesc(file_task_service, 5);

/**
 * @generated from message suru.task.v1.ListTasksResponse
 */
export type ListTasksResponse = Message<'suru.task.v1.ListTasksResponse'> & {
  /**
   * @generated from field: repeated suru.task.v1.Task tasks = 1;
   */
  tasks: Task[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;
};

/**
 * Describes the message suru.task.v1.ListTasksResponse.
 * Use `create(ListTasksResponseSchema)` to create a new message.
 */
export const ListTasksResponseSchema: GenMessage<ListTasksResponse> =
  /*@__PURE__*/
  messageDesc(file_task_service, 6);

/**
 * Update Task
 *
 * @generated from message suru.task.v1.UpdateTaskRequest
 */
export type UpdateTaskRequest = Message<'suru.task.v1.UpdateTaskRequest'> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: optional string title = 2;
   */
  title?: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: optional suru.task.v1.TaskStatus status = 4;
   */
  status?: TaskStatus;

  /**
   * @generated from field: optional suru.task.v1.Priority priority = 5;
   */
  priority?: Priority;

  /**
   * @generated from field: optional string due_date = 6;
   */
  dueDate?: string;

  /**
   * @generated from field: repeated string tags = 7;
   */
  tags: string[];

  /**
   * Optimistic locking
   *
   * @generated from field: int32 version = 8;
   */
  version: number;
};

/**
 * Describes the message suru.task.v1.UpdateTaskRequest.
 * Use `create(UpdateTaskRequestSchema)` to create a new message.
 */
export const UpdateTaskRequestSchema: GenMessage<UpdateTaskRequest> =
  /*@__PURE__*/
  messageDesc(file_task_service, 7);

/**
 * @generated from message suru.task.v1.UpdateTaskResponse
 */
export type UpdateTaskResponse = Message<'suru.task.v1.UpdateTaskResponse'> & {
  /**
   * @generated from field: suru.task.v1.Task task = 1;
   */
  task?: Task;
};

/**
 * Describes the message suru.task.v1.UpdateTaskResponse.
 * Use `create(UpdateTaskResponseSchema)` to create a new message.
 */
export const UpdateTaskResponseSchema: GenMessage<UpdateTaskResponse> =
  /*@__PURE__*/
  messageDesc(file_task_service, 8);

/**
 * Delete Task
 *
 * @generated from message suru.task.v1.DeleteTaskRequest
 */
export type DeleteTaskRequest = Message<'suru.task.v1.DeleteTaskRequest'> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message suru.task.v1.DeleteTaskRequest.
 * Use `create(DeleteTaskRequestSchema)` to create a new message.
 */
export const DeleteTaskRequestSchema: GenMessage<DeleteTaskRequest> =
  /*@__PURE__*/
  messageDesc(file_task_service, 9);

/**
 * @generated from message suru.task.v1.DeleteTaskResponse
 */
export type DeleteTaskResponse = Message<'suru.task.v1.DeleteTaskResponse'> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message suru.task.v1.DeleteTaskResponse.
 * Use `create(DeleteTaskResponseSchema)` to create a new message.
 */
export const DeleteTaskResponseSchema: GenMessage<DeleteTaskResponse> =
  /*@__PURE__*/
  messageDesc(file_task_service, 10);

/**
 * Assign Task
 *
 * @generated from message suru.task.v1.AssignTaskRequest
 */
export type AssignTaskRequest = Message<'suru.task.v1.AssignTaskRequest'> & {
  /**
   * @generated from field: string task_id = 1;
   */
  taskId: string;

  /**
   * null to unassign
   *
   * @generated from field: optional string assignee_id = 2;
   */
  assigneeId?: string;
};

/**
 * Describes the message suru.task.v1.AssignTaskRequest.
 * Use `create(AssignTaskRequestSchema)` to create a new message.
 */
export const AssignTaskRequestSchema: GenMessage<AssignTaskRequest> =
  /*@__PURE__*/
  messageDesc(file_task_service, 11);

/**
 * @generated from message suru.task.v1.AssignTaskResponse
 */
export type AssignTaskResponse = Message<'suru.task.v1.AssignTaskResponse'> & {
  /**
   * @generated from field: suru.task.v1.Task task = 1;
   */
  task?: Task;
};

/**
 * Describes the message suru.task.v1.AssignTaskResponse.
 * Use `create(AssignTaskResponseSchema)` to create a new message.
 */
export const AssignTaskResponseSchema: GenMessage<AssignTaskResponse> =
  /*@__PURE__*/
  messageDesc(file_task_service, 12);

/**
 * Add Subtask
 *
 * @generated from message suru.task.v1.AddSubtaskRequest
 */
export type AddSubtaskRequest = Message<'suru.task.v1.AddSubtaskRequest'> & {
  /**
   * @generated from field: string parent_task_id = 1;
   */
  parentTaskId: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;
};

/**
 * Describes the message suru.task.v1.AddSubtaskRequest.
 * Use `create(AddSubtaskRequestSchema)` to create a new message.
 */
export const AddSubtaskRequestSchema: GenMessage<AddSubtaskRequest> =
  /*@__PURE__*/
  messageDesc(file_task_service, 13);

/**
 * @generated from message suru.task.v1.AddSubtaskResponse
 */
export type AddSubtaskResponse = Message<'suru.task.v1.AddSubtaskResponse'> & {
  /**
   * @generated from field: suru.task.v1.Task subtask = 1;
   */
  subtask?: Task;
};

/**
 * Describes the message suru.task.v1.AddSubtaskResponse.
 * Use `create(AddSubtaskResponseSchema)` to create a new message.
 */
export const AddSubtaskResponseSchema: GenMessage<AddSubtaskResponse> =
  /*@__PURE__*/
  messageDesc(file_task_service, 14);

/**
 * Watch Tasks (streaming)
 *
 * @generated from message suru.task.v1.WatchTasksRequest
 */
export type WatchTasksRequest = Message<'suru.task.v1.WatchTasksRequest'> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;
};

/**
 * Describes the message suru.task.v1.WatchTasksRequest.
 * Use `create(WatchTasksRequestSchema)` to create a new message.
 */
export const WatchTasksRequestSchema: GenMessage<WatchTasksRequest> =
  /*@__PURE__*/
  messageDesc(file_task_service, 15);

/**
 * @generated from message suru.task.v1.TaskEvent
 */
export type TaskEvent = Message<'suru.task.v1.TaskEvent'> & {
  /**
   * @generated from field: suru.task.v1.TaskEvent.EventType type = 1;
   */
  type: TaskEvent_EventType;

  /**
   * @generated from field: suru.task.v1.Task task = 2;
   */
  task?: Task;

  /**
   * @generated from field: string timestamp = 3;
   */
  timestamp: string;
};

/**
 * Describes the message suru.task.v1.TaskEvent.
 * Use `create(TaskEventSchema)` to create a new message.
 */
export const TaskEventSchema: GenMessage<TaskEvent> =
  /*@__PURE__*/
  messageDesc(file_task_service, 16);

/**
 * @generated from enum suru.task.v1.TaskEvent.EventType
 */
export enum TaskEvent_EventType {
  /**
   * @generated from enum value: CREATED = 0;
   */
  CREATED = 0,

  /**
   * @generated from enum value: UPDATED = 1;
   */
  UPDATED = 1,

  /**
   * @generated from enum value: DELETED = 2;
   */
  DELETED = 2,

  /**
   * @generated from enum value: ASSIGNED = 3;
   */
  ASSIGNED = 3,
}

/**
 * Describes the enum suru.task.v1.TaskEvent.EventType.
 */
export const TaskEvent_EventTypeSchema: GenEnum<TaskEvent_EventType> =
  /*@__PURE__*/
  enumDesc(file_task_service, 16, 0);

/**
 * @generated from enum suru.task.v1.TaskStatus
 */
export enum TaskStatus {
  /**
   * @generated from enum value: TODO = 0;
   */
  TODO = 0,

  /**
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * @generated from enum value: DONE = 2;
   */
  DONE = 2,
}

/**
 * Describes the enum suru.task.v1.TaskStatus.
 */
export const TaskStatusSchema: GenEnum<TaskStatus> = /*@__PURE__*/ enumDesc(file_task_service, 0);

/**
 * @generated from enum suru.task.v1.Priority
 */
export enum Priority {
  /**
   * @generated from enum value: LOW = 0;
   */
  LOW = 0,

  /**
   * @generated from enum value: MEDIUM = 1;
   */
  MEDIUM = 1,

  /**
   * @generated from enum value: HIGH = 2;
   */
  HIGH = 2,
}

/**
 * Describes the enum suru.task.v1.Priority.
 */
export const PrioritySchema: GenEnum<Priority> = /*@__PURE__*/ enumDesc(file_task_service, 1);

/**
 * Task Service - Manages tasks and subtasks
 *
 * @generated from service suru.task.v1.TaskService
 */
export const TaskService: GenService<{
  /**
   * Create a new task
   *
   * @generated from rpc suru.task.v1.TaskService.CreateTask
   */
  createTask: {
    methodKind: 'unary';
    input: typeof CreateTaskRequestSchema;
    output: typeof CreateTaskResponseSchema;
  };
  /**
   * Get task by ID
   *
   * @generated from rpc suru.task.v1.TaskService.GetTask
   */
  getTask: {
    methodKind: 'unary';
    input: typeof GetTaskRequestSchema;
    output: typeof GetTaskResponseSchema;
  };
  /**
   * List tasks with filtering
   *
   * @generated from rpc suru.task.v1.TaskService.ListTasks
   */
  listTasks: {
    methodKind: 'unary';
    input: typeof ListTasksRequestSchema;
    output: typeof ListTasksResponseSchema;
  };
  /**
   * Update task
   *
   * @generated from rpc suru.task.v1.TaskService.UpdateTask
   */
  updateTask: {
    methodKind: 'unary';
    input: typeof UpdateTaskRequestSchema;
    output: typeof UpdateTaskResponseSchema;
  };
  /**
   * Delete task
   *
   * @generated from rpc suru.task.v1.TaskService.DeleteTask
   */
  deleteTask: {
    methodKind: 'unary';
    input: typeof DeleteTaskRequestSchema;
    output: typeof DeleteTaskResponseSchema;
  };
  /**
   * Assign task to user
   *
   * @generated from rpc suru.task.v1.TaskService.AssignTask
   */
  assignTask: {
    methodKind: 'unary';
    input: typeof AssignTaskRequestSchema;
    output: typeof AssignTaskResponseSchema;
  };
  /**
   * Add subtask
   *
   * @generated from rpc suru.task.v1.TaskService.AddSubtask
   */
  addSubtask: {
    methodKind: 'unary';
    input: typeof AddSubtaskRequestSchema;
    output: typeof AddSubtaskResponseSchema;
  };
  /**
   * Stream task updates (real-time)
   *
   * @generated from rpc suru.task.v1.TaskService.WatchTasks
   */
  watchTasks: {
    methodKind: 'server_streaming';
    input: typeof WatchTasksRequestSchema;
    output: typeof TaskEventSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_task_service, 0);
