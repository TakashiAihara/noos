// Notification Service gRPC Contract

// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file notification-service.proto (package suru.notification.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file notification-service.proto.
 */
export const file_notification_service: GenFile = /*@__PURE__*/
  fileDesc("Chpub3RpZmljYXRpb24tc2VydmljZS5wcm90bxIUc3VydS5ub3RpZmljYXRpb24udjEivgIKDE5vdGlmaWNhdGlvbhIKCgJpZBgBIAEoCRIPCgd1c2VyX2lkGAIgASgJEjQKBHR5cGUYAyABKA4yJi5zdXJ1Lm5vdGlmaWNhdGlvbi52MS5Ob3RpZmljYXRpb25UeXBlEg8KB21lc3NhZ2UYBCABKAkSFAoHdGFza19pZBgFIAEoCUgAiAEBEjUKDHRhc2tfc3VtbWFyeRgGIAEoCzIaLnN1cnUubm90aWZpY2F0aW9uLnYxLlRhc2tIAYgBARIUCgdyZWFkX2F0GAcgASgJSAKIAQESGQoMZGVsaXZlcmVkX2F0GAggASgJSAOIAQESEgoKY3JlYXRlZF9hdBgJIAEoCUIKCghfdGFza19pZEIPCg1fdGFza19zdW1tYXJ5QgoKCF9yZWFkX2F0Qg8KDV9kZWxpdmVyZWRfYXQiMQoEVGFzaxIKCgJpZBgBIAEoCRINCgV0aXRsZRgCIAEoCRIOCgZzdGF0dXMYAyABKAkiYQoYTGlzdE5vdGlmaWNhdGlvbnNSZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAkSEwoLdW5yZWFkX29ubHkYAiABKAgSDAoEcGFnZRgDIAEoBRIRCglwYWdlX3NpemUYBCABKAUigQEKGUxpc3ROb3RpZmljYXRpb25zUmVzcG9uc2USOQoNbm90aWZpY2F0aW9ucxgBIAMoCzIiLnN1cnUubm90aWZpY2F0aW9uLnYxLk5vdGlmaWNhdGlvbhITCgt0b3RhbF9jb3VudBgCIAEoBRIUCgx1bnJlYWRfY291bnQYAyABKAUiLAoRTWFya0FzUmVhZFJlcXVlc3QSFwoPbm90aWZpY2F0aW9uX2lkGAEgASgJIk4KEk1hcmtBc1JlYWRSZXNwb25zZRI4Cgxub3RpZmljYXRpb24YASABKAsyIi5zdXJ1Lm5vdGlmaWNhdGlvbi52MS5Ob3RpZmljYXRpb24iJwoUTWFya0FsbEFzUmVhZFJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCSImChVNYXJrQWxsQXNSZWFkUmVzcG9uc2USDQoFY291bnQYASABKAUiNAoZRGVsZXRlTm90aWZpY2F0aW9uUmVxdWVzdBIXCg9ub3RpZmljYXRpb25faWQYASABKAkiLQoaRGVsZXRlTm90aWZpY2F0aW9uUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCJ1ChRTdWJzY3JpYmVQdXNoUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEhQKDGRldmljZV90b2tlbhgCIAEoCRI2CghwbGF0Zm9ybRgDIAEoDjIkLnN1cnUubm90aWZpY2F0aW9uLnYxLkRldmljZVBsYXRmb3JtIigKFVN1YnNjcmliZVB1c2hSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIj8KFlVuc3Vic2NyaWJlUHVzaFJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRIUCgxkZXZpY2VfdG9rZW4YAiABKAkiKgoXVW5zdWJzY3JpYmVQdXNoUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCIsChlXYXRjaE5vdGlmaWNhdGlvbnNSZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAkiwwEKGUNyZWF0ZU5vdGlmaWNhdGlvblJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRI0CgR0eXBlGAIgASgOMiYuc3VydS5ub3RpZmljYXRpb24udjEuTm90aWZpY2F0aW9uVHlwZRIPCgdtZXNzYWdlGAMgASgJEhQKB3Rhc2tfaWQYBCABKAlIAIgBARIaCg1zY2hlZHVsZWRfZm9yGAUgASgJSAGIAQFCCgoIX3Rhc2tfaWRCEAoOX3NjaGVkdWxlZF9mb3IiVgoaQ3JlYXRlTm90aWZpY2F0aW9uUmVzcG9uc2USOAoMbm90aWZpY2F0aW9uGAEgASgLMiIuc3VydS5ub3RpZmljYXRpb24udjEuTm90aWZpY2F0aW9uKmIKEE5vdGlmaWNhdGlvblR5cGUSEQoNVEFTS19BU1NJR05FRBAAEhIKDlRBU0tfTUVOVElPTkVEEAESFQoRRFVFX0RBVEVfUkVNSU5ERVIQAhIQCgxUQVNLX1VQREFURUQQAyovCg5EZXZpY2VQbGF0Zm9ybRIHCgNXRUIQABIHCgNJT1MQARILCgdBTkRST0lEEAIyjwcKE05vdGlmaWNhdGlvblNlcnZpY2USdAoRTGlzdE5vdGlmaWNhdGlvbnMSLi5zdXJ1Lm5vdGlmaWNhdGlvbi52MS5MaXN0Tm90aWZpY2F0aW9uc1JlcXVlc3QaLy5zdXJ1Lm5vdGlmaWNhdGlvbi52MS5MaXN0Tm90aWZpY2F0aW9uc1Jlc3BvbnNlEl8KCk1hcmtBc1JlYWQSJy5zdXJ1Lm5vdGlmaWNhdGlvbi52MS5NYXJrQXNSZWFkUmVxdWVzdBooLnN1cnUubm90aWZpY2F0aW9uLnYxLk1hcmtBc1JlYWRSZXNwb25zZRJoCg1NYXJrQWxsQXNSZWFkEiouc3VydS5ub3RpZmljYXRpb24udjEuTWFya0FsbEFzUmVhZFJlcXVlc3QaKy5zdXJ1Lm5vdGlmaWNhdGlvbi52MS5NYXJrQWxsQXNSZWFkUmVzcG9uc2USdwoSRGVsZXRlTm90aWZpY2F0aW9uEi8uc3VydS5ub3RpZmljYXRpb24udjEuRGVsZXRlTm90aWZpY2F0aW9uUmVxdWVzdBowLnN1cnUubm90aWZpY2F0aW9uLnYxLkRlbGV0ZU5vdGlmaWNhdGlvblJlc3BvbnNlEmgKDVN1YnNjcmliZVB1c2gSKi5zdXJ1Lm5vdGlmaWNhdGlvbi52MS5TdWJzY3JpYmVQdXNoUmVxdWVzdBorLnN1cnUubm90aWZpY2F0aW9uLnYxLlN1YnNjcmliZVB1c2hSZXNwb25zZRJuCg9VbnN1YnNjcmliZVB1c2gSLC5zdXJ1Lm5vdGlmaWNhdGlvbi52MS5VbnN1YnNjcmliZVB1c2hSZXF1ZXN0Gi0uc3VydS5ub3RpZmljYXRpb24udjEuVW5zdWJzY3JpYmVQdXNoUmVzcG9uc2USawoSV2F0Y2hOb3RpZmljYXRpb25zEi8uc3VydS5ub3RpZmljYXRpb24udjEuV2F0Y2hOb3RpZmljYXRpb25zUmVxdWVzdBoiLnN1cnUubm90aWZpY2F0aW9uLnYxLk5vdGlmaWNhdGlvbjABEncKEkNyZWF0ZU5vdGlmaWNhdGlvbhIvLnN1cnUubm90aWZpY2F0aW9uLnYxLkNyZWF0ZU5vdGlmaWNhdGlvblJlcXVlc3QaMC5zdXJ1Lm5vdGlmaWNhdGlvbi52MS5DcmVhdGVOb3RpZmljYXRpb25SZXNwb25zZWIGcHJvdG8z");

/**
 * Messages
 *
 * @generated from message suru.notification.v1.Notification
 */
export type Notification = Message<"suru.notification.v1.Notification"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: suru.notification.v1.NotificationType type = 3;
   */
  type: NotificationType;

  /**
   * @generated from field: string message = 4;
   */
  message: string;

  /**
   * @generated from field: optional string task_id = 5;
   */
  taskId?: string;

  /**
   * Brief task info for display
   *
   * @generated from field: optional suru.notification.v1.Task task_summary = 6;
   */
  taskSummary?: Task;

  /**
   * @generated from field: optional string read_at = 7;
   */
  readAt?: string;

  /**
   * @generated from field: optional string delivered_at = 8;
   */
  deliveredAt?: string;

  /**
   * @generated from field: string created_at = 9;
   */
  createdAt: string;
};

/**
 * Describes the message suru.notification.v1.Notification.
 * Use `create(NotificationSchema)` to create a new message.
 */
export const NotificationSchema: GenMessage<Notification> = /*@__PURE__*/
  messageDesc(file_notification_service, 0);

/**
 * @generated from message suru.notification.v1.Task
 */
export type Task = Message<"suru.notification.v1.Task"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: string status = 3;
   */
  status: string;
};

/**
 * Describes the message suru.notification.v1.Task.
 * Use `create(TaskSchema)` to create a new message.
 */
export const TaskSchema: GenMessage<Task> = /*@__PURE__*/
  messageDesc(file_notification_service, 1);

/**
 * List Notifications
 *
 * @generated from message suru.notification.v1.ListNotificationsRequest
 */
export type ListNotificationsRequest = Message<"suru.notification.v1.ListNotificationsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: bool unread_only = 2;
   */
  unreadOnly: boolean;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;
};

/**
 * Describes the message suru.notification.v1.ListNotificationsRequest.
 * Use `create(ListNotificationsRequestSchema)` to create a new message.
 */
export const ListNotificationsRequestSchema: GenMessage<ListNotificationsRequest> = /*@__PURE__*/
  messageDesc(file_notification_service, 2);

/**
 * @generated from message suru.notification.v1.ListNotificationsResponse
 */
export type ListNotificationsResponse = Message<"suru.notification.v1.ListNotificationsResponse"> & {
  /**
   * @generated from field: repeated suru.notification.v1.Notification notifications = 1;
   */
  notifications: Notification[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: int32 unread_count = 3;
   */
  unreadCount: number;
};

/**
 * Describes the message suru.notification.v1.ListNotificationsResponse.
 * Use `create(ListNotificationsResponseSchema)` to create a new message.
 */
export const ListNotificationsResponseSchema: GenMessage<ListNotificationsResponse> = /*@__PURE__*/
  messageDesc(file_notification_service, 3);

/**
 * Mark as Read
 *
 * @generated from message suru.notification.v1.MarkAsReadRequest
 */
export type MarkAsReadRequest = Message<"suru.notification.v1.MarkAsReadRequest"> & {
  /**
   * @generated from field: string notification_id = 1;
   */
  notificationId: string;
};

/**
 * Describes the message suru.notification.v1.MarkAsReadRequest.
 * Use `create(MarkAsReadRequestSchema)` to create a new message.
 */
export const MarkAsReadRequestSchema: GenMessage<MarkAsReadRequest> = /*@__PURE__*/
  messageDesc(file_notification_service, 4);

/**
 * @generated from message suru.notification.v1.MarkAsReadResponse
 */
export type MarkAsReadResponse = Message<"suru.notification.v1.MarkAsReadResponse"> & {
  /**
   * @generated from field: suru.notification.v1.Notification notification = 1;
   */
  notification?: Notification;
};

/**
 * Describes the message suru.notification.v1.MarkAsReadResponse.
 * Use `create(MarkAsReadResponseSchema)` to create a new message.
 */
export const MarkAsReadResponseSchema: GenMessage<MarkAsReadResponse> = /*@__PURE__*/
  messageDesc(file_notification_service, 5);

/**
 * Mark All as Read
 *
 * @generated from message suru.notification.v1.MarkAllAsReadRequest
 */
export type MarkAllAsReadRequest = Message<"suru.notification.v1.MarkAllAsReadRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * Describes the message suru.notification.v1.MarkAllAsReadRequest.
 * Use `create(MarkAllAsReadRequestSchema)` to create a new message.
 */
export const MarkAllAsReadRequestSchema: GenMessage<MarkAllAsReadRequest> = /*@__PURE__*/
  messageDesc(file_notification_service, 6);

/**
 * @generated from message suru.notification.v1.MarkAllAsReadResponse
 */
export type MarkAllAsReadResponse = Message<"suru.notification.v1.MarkAllAsReadResponse"> & {
  /**
   * @generated from field: int32 count = 1;
   */
  count: number;
};

/**
 * Describes the message suru.notification.v1.MarkAllAsReadResponse.
 * Use `create(MarkAllAsReadResponseSchema)` to create a new message.
 */
export const MarkAllAsReadResponseSchema: GenMessage<MarkAllAsReadResponse> = /*@__PURE__*/
  messageDesc(file_notification_service, 7);

/**
 * Delete Notification
 *
 * @generated from message suru.notification.v1.DeleteNotificationRequest
 */
export type DeleteNotificationRequest = Message<"suru.notification.v1.DeleteNotificationRequest"> & {
  /**
   * @generated from field: string notification_id = 1;
   */
  notificationId: string;
};

/**
 * Describes the message suru.notification.v1.DeleteNotificationRequest.
 * Use `create(DeleteNotificationRequestSchema)` to create a new message.
 */
export const DeleteNotificationRequestSchema: GenMessage<DeleteNotificationRequest> = /*@__PURE__*/
  messageDesc(file_notification_service, 8);

/**
 * @generated from message suru.notification.v1.DeleteNotificationResponse
 */
export type DeleteNotificationResponse = Message<"suru.notification.v1.DeleteNotificationResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message suru.notification.v1.DeleteNotificationResponse.
 * Use `create(DeleteNotificationResponseSchema)` to create a new message.
 */
export const DeleteNotificationResponseSchema: GenMessage<DeleteNotificationResponse> = /*@__PURE__*/
  messageDesc(file_notification_service, 9);

/**
 * Subscribe Push
 *
 * @generated from message suru.notification.v1.SubscribePushRequest
 */
export type SubscribePushRequest = Message<"suru.notification.v1.SubscribePushRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * FCM token or Web Push subscription
   *
   * @generated from field: string device_token = 2;
   */
  deviceToken: string;

  /**
   * @generated from field: suru.notification.v1.DevicePlatform platform = 3;
   */
  platform: DevicePlatform;
};

/**
 * Describes the message suru.notification.v1.SubscribePushRequest.
 * Use `create(SubscribePushRequestSchema)` to create a new message.
 */
export const SubscribePushRequestSchema: GenMessage<SubscribePushRequest> = /*@__PURE__*/
  messageDesc(file_notification_service, 10);

/**
 * @generated from message suru.notification.v1.SubscribePushResponse
 */
export type SubscribePushResponse = Message<"suru.notification.v1.SubscribePushResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message suru.notification.v1.SubscribePushResponse.
 * Use `create(SubscribePushResponseSchema)` to create a new message.
 */
export const SubscribePushResponseSchema: GenMessage<SubscribePushResponse> = /*@__PURE__*/
  messageDesc(file_notification_service, 11);

/**
 * Unsubscribe Push
 *
 * @generated from message suru.notification.v1.UnsubscribePushRequest
 */
export type UnsubscribePushRequest = Message<"suru.notification.v1.UnsubscribePushRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string device_token = 2;
   */
  deviceToken: string;
};

/**
 * Describes the message suru.notification.v1.UnsubscribePushRequest.
 * Use `create(UnsubscribePushRequestSchema)` to create a new message.
 */
export const UnsubscribePushRequestSchema: GenMessage<UnsubscribePushRequest> = /*@__PURE__*/
  messageDesc(file_notification_service, 12);

/**
 * @generated from message suru.notification.v1.UnsubscribePushResponse
 */
export type UnsubscribePushResponse = Message<"suru.notification.v1.UnsubscribePushResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message suru.notification.v1.UnsubscribePushResponse.
 * Use `create(UnsubscribePushResponseSchema)` to create a new message.
 */
export const UnsubscribePushResponseSchema: GenMessage<UnsubscribePushResponse> = /*@__PURE__*/
  messageDesc(file_notification_service, 13);

/**
 * Watch Notifications (streaming)
 *
 * @generated from message suru.notification.v1.WatchNotificationsRequest
 */
export type WatchNotificationsRequest = Message<"suru.notification.v1.WatchNotificationsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * Describes the message suru.notification.v1.WatchNotificationsRequest.
 * Use `create(WatchNotificationsRequestSchema)` to create a new message.
 */
export const WatchNotificationsRequestSchema: GenMessage<WatchNotificationsRequest> = /*@__PURE__*/
  messageDesc(file_notification_service, 14);

/**
 * Create Notification (internal)
 *
 * @generated from message suru.notification.v1.CreateNotificationRequest
 */
export type CreateNotificationRequest = Message<"suru.notification.v1.CreateNotificationRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: suru.notification.v1.NotificationType type = 2;
   */
  type: NotificationType;

  /**
   * @generated from field: string message = 3;
   */
  message: string;

  /**
   * @generated from field: optional string task_id = 4;
   */
  taskId?: string;

  /**
   * ISO 8601 for reminders
   *
   * @generated from field: optional string scheduled_for = 5;
   */
  scheduledFor?: string;
};

/**
 * Describes the message suru.notification.v1.CreateNotificationRequest.
 * Use `create(CreateNotificationRequestSchema)` to create a new message.
 */
export const CreateNotificationRequestSchema: GenMessage<CreateNotificationRequest> = /*@__PURE__*/
  messageDesc(file_notification_service, 15);

/**
 * @generated from message suru.notification.v1.CreateNotificationResponse
 */
export type CreateNotificationResponse = Message<"suru.notification.v1.CreateNotificationResponse"> & {
  /**
   * @generated from field: suru.notification.v1.Notification notification = 1;
   */
  notification?: Notification;
};

/**
 * Describes the message suru.notification.v1.CreateNotificationResponse.
 * Use `create(CreateNotificationResponseSchema)` to create a new message.
 */
export const CreateNotificationResponseSchema: GenMessage<CreateNotificationResponse> = /*@__PURE__*/
  messageDesc(file_notification_service, 16);

/**
 * @generated from enum suru.notification.v1.NotificationType
 */
export enum NotificationType {
  /**
   * @generated from enum value: TASK_ASSIGNED = 0;
   */
  TASK_ASSIGNED = 0,

  /**
   * @generated from enum value: TASK_MENTIONED = 1;
   */
  TASK_MENTIONED = 1,

  /**
   * @generated from enum value: DUE_DATE_REMINDER = 2;
   */
  DUE_DATE_REMINDER = 2,

  /**
   * @generated from enum value: TASK_UPDATED = 3;
   */
  TASK_UPDATED = 3,
}

/**
 * Describes the enum suru.notification.v1.NotificationType.
 */
export const NotificationTypeSchema: GenEnum<NotificationType> = /*@__PURE__*/
  enumDesc(file_notification_service, 0);

/**
 * @generated from enum suru.notification.v1.DevicePlatform
 */
export enum DevicePlatform {
  /**
   * @generated from enum value: WEB = 0;
   */
  WEB = 0,

  /**
   * @generated from enum value: IOS = 1;
   */
  IOS = 1,

  /**
   * @generated from enum value: ANDROID = 2;
   */
  ANDROID = 2,
}

/**
 * Describes the enum suru.notification.v1.DevicePlatform.
 */
export const DevicePlatformSchema: GenEnum<DevicePlatform> = /*@__PURE__*/
  enumDesc(file_notification_service, 1);

/**
 * Notification Service - Manages push notifications and reminders
 *
 * @generated from service suru.notification.v1.NotificationService
 */
export const NotificationService: GenService<{
  /**
   * Get notifications for user
   *
   * @generated from rpc suru.notification.v1.NotificationService.ListNotifications
   */
  listNotifications: {
    methodKind: "unary";
    input: typeof ListNotificationsRequestSchema;
    output: typeof ListNotificationsResponseSchema;
  },
  /**
   * Mark notification as read
   *
   * @generated from rpc suru.notification.v1.NotificationService.MarkAsRead
   */
  markAsRead: {
    methodKind: "unary";
    input: typeof MarkAsReadRequestSchema;
    output: typeof MarkAsReadResponseSchema;
  },
  /**
   * Mark all as read
   *
   * @generated from rpc suru.notification.v1.NotificationService.MarkAllAsRead
   */
  markAllAsRead: {
    methodKind: "unary";
    input: typeof MarkAllAsReadRequestSchema;
    output: typeof MarkAllAsReadResponseSchema;
  },
  /**
   * Delete notification
   *
   * @generated from rpc suru.notification.v1.NotificationService.DeleteNotification
   */
  deleteNotification: {
    methodKind: "unary";
    input: typeof DeleteNotificationRequestSchema;
    output: typeof DeleteNotificationResponseSchema;
  },
  /**
   * Subscribe to push notifications
   *
   * @generated from rpc suru.notification.v1.NotificationService.SubscribePush
   */
  subscribePush: {
    methodKind: "unary";
    input: typeof SubscribePushRequestSchema;
    output: typeof SubscribePushResponseSchema;
  },
  /**
   * Unsubscribe from push notifications
   *
   * @generated from rpc suru.notification.v1.NotificationService.UnsubscribePush
   */
  unsubscribePush: {
    methodKind: "unary";
    input: typeof UnsubscribePushRequestSchema;
    output: typeof UnsubscribePushResponseSchema;
  },
  /**
   * Stream new notifications (real-time)
   *
   * @generated from rpc suru.notification.v1.NotificationService.WatchNotifications
   */
  watchNotifications: {
    methodKind: "server_streaming";
    input: typeof WatchNotificationsRequestSchema;
    output: typeof NotificationSchema;
  },
  /**
   * Internal: Create notification (called by other services)
   *
   * @generated from rpc suru.notification.v1.NotificationService.CreateNotification
   */
  createNotification: {
    methodKind: "unary";
    input: typeof CreateNotificationRequestSchema;
    output: typeof CreateNotificationResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_notification_service, 0);

