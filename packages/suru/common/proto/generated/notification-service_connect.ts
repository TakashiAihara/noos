// Notification Service gRPC Contract

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file notification-service.proto (package suru.notification.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateNotificationRequest, CreateNotificationResponse, DeleteNotificationRequest, DeleteNotificationResponse, ListNotificationsRequest, ListNotificationsResponse, MarkAllAsReadRequest, MarkAllAsReadResponse, MarkAsReadRequest, MarkAsReadResponse, Notification, SubscribePushRequest, SubscribePushResponse, UnsubscribePushRequest, UnsubscribePushResponse, WatchNotificationsRequest } from "./notification-service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Notification Service - Manages push notifications and reminders
 *
 * @generated from service suru.notification.v1.NotificationService
 */
export const NotificationService = {
  typeName: "suru.notification.v1.NotificationService",
  methods: {
    /**
     * Get notifications for user
     *
     * @generated from rpc suru.notification.v1.NotificationService.ListNotifications
     */
    listNotifications: {
      name: "ListNotifications",
      I: ListNotificationsRequest,
      O: ListNotificationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Mark notification as read
     *
     * @generated from rpc suru.notification.v1.NotificationService.MarkAsRead
     */
    markAsRead: {
      name: "MarkAsRead",
      I: MarkAsReadRequest,
      O: MarkAsReadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Mark all as read
     *
     * @generated from rpc suru.notification.v1.NotificationService.MarkAllAsRead
     */
    markAllAsRead: {
      name: "MarkAllAsRead",
      I: MarkAllAsReadRequest,
      O: MarkAllAsReadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete notification
     *
     * @generated from rpc suru.notification.v1.NotificationService.DeleteNotification
     */
    deleteNotification: {
      name: "DeleteNotification",
      I: DeleteNotificationRequest,
      O: DeleteNotificationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Subscribe to push notifications
     *
     * @generated from rpc suru.notification.v1.NotificationService.SubscribePush
     */
    subscribePush: {
      name: "SubscribePush",
      I: SubscribePushRequest,
      O: SubscribePushResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Unsubscribe from push notifications
     *
     * @generated from rpc suru.notification.v1.NotificationService.UnsubscribePush
     */
    unsubscribePush: {
      name: "UnsubscribePush",
      I: UnsubscribePushRequest,
      O: UnsubscribePushResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Stream new notifications (real-time)
     *
     * @generated from rpc suru.notification.v1.NotificationService.WatchNotifications
     */
    watchNotifications: {
      name: "WatchNotifications",
      I: WatchNotificationsRequest,
      O: Notification,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Internal: Create notification (called by other services)
     *
     * @generated from rpc suru.notification.v1.NotificationService.CreateNotification
     */
    createNotification: {
      name: "CreateNotification",
      I: CreateNotificationRequest,
      O: CreateNotificationResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

