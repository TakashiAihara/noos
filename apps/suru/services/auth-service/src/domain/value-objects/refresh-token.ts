/**
 * RefreshToken Value Object
 */

import { validateRequired } from '@noos/suru-utils';
import { ValidationError } from '@noos/suru-types';

export class RefreshToken {
  private readonly value: string;

  private constructor(value: string) {
    this.value = value;
  }

  static create(token: string): RefreshToken {
    validateRequired(token, 'Refresh token');

    // Validate token format (should be a secure random string, at least 32 characters)
    if (token.length < 32) {
      throw new ValidationError('Refresh token must be at least 32 characters');
    }

    return new RefreshToken(token);
  }

  /**
   * Generate a new refresh token (to be generated by infrastructure layer)
   */
  static generate(): RefreshToken {
    const crypto = require('crypto');
    const token = crypto.randomBytes(32).toString('base64url');
    return new RefreshToken(token);
  }

  toString(): string {
    return this.value;
  }

  equals(other: RefreshToken): boolean {
    return this.value === other.value;
  }
}
